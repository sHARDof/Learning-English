<Window x:Class="Learning_English.Window1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Learning_English"
        mc:Ignorable="d"
        Icon="/Logo.png"
        Title="Afilana" Height="500" Width="800" WindowStyle="None" AllowsTransparency="True" Background="Transparent" ResizeMode="NoResize" MouseDown="Window_MouseDown">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                       SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                       StrokeDashArray="1 2"
                       StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background"
                     Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border"
                     Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background"
                     Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border"
                     Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background"
                     Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border"
                     Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background"
                     Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border"
                     Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground"
                     Color="#FF838383" />

        <Style x:Key="DefaultButtonStyle"
           TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="5" x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="Transparent" />
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="Transparent"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="Transparent" />
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="5" x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Border Background="White" CornerRadius="20">
            <StackPanel>
                <Grid VerticalAlignment="Top" Margin="719,0,22,0" Height="44">
                    <Border Width="25" Height="25" Background="red" HorizontalAlignment="Right" CornerRadius="8">
                        <Button BorderBrush="Transparent" Background="Transparent" Style="{DynamicResource DefaultButtonStyle}" FontFamily="Open Sans Extrabold" Click="CloseWindow"  Content="x" Name="Close1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="15" />
                    </Border>
                    <Border Width="25" Height="25" Background="Gray" CornerRadius="8" HorizontalAlignment="Left">
                        <Button Click="HideWindow" BorderBrush="Transparent" Background="Transparent" Style="{DynamicResource DefaultButtonStyle}" FontFamily="Open Sans Extrabold"  Content="-" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="14" />
                    </Border>
                </Grid>
                <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="Past Continuous - это прошедшее длительное время, которое указывает на событие или процесс, длившийся в определенный период времени в прошлом." FontSize="30" FontFamily="Open Sans Extrabold"></TextBlock>
                <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center" Text="Past Continuous указывает на действие совершённое в прошлом. Его используют когда знают полные данные о прошедшем процессе. Действие совершённое в прошлом и там же закончившиеся и называется Past Continuous. Для образования приложений в этом времени используют глагол to be(was, ing)." FontSize="20" FontFamily="Open Sans Extrabold" Width="774"></TextBlock>
            </StackPanel>
        </Border>
    </Grid>
</Window>
